  #version 430
  layout(std430, binding = 0) buffer Pos{ float Positions[]; };
  layout(std430, binding = 1) buffer GradientLayout { float Gradients[]; };
  layout(std430, binding = 2) buffer PrevGradientLayout { float PrevGradients[]; };
  layout(std430, binding = 3) buffer GainLayout { float Gain[]; };
  layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;

  uniform uint num_points;
  uniform float eta;
  uniform float minGain;
  uniform float iter;
  uniform float mom_iter;
  uniform float mom;
  uniform float final_mom;
  uniform float mult;

  void main() {
    uint workGroupID = gl_WorkGroupID.y * gl_NumWorkGroups.x + gl_WorkGroupID.x;
    uint i = workGroupID * gl_WorkGroupSize.x + gl_LocalInvocationID.x;

    if (i >= num_points * 2)
      return;

    float grad = Gradients[i];
    float pgrad = PrevGradients[i];
    float gain = Gain[i];

    gain = sign(grad) != sign(pgrad) ? gain + 0.2 : gain * 0.8;
    gain = max(gain, minGain);

    float etaGain = eta * gain;
    grad = (grad > 0 ? 1 : -1) * abs(grad * etaGain) / etaGain;

    pgrad = (iter < mom_iter ? mom : final_mom) * pgrad - etaGain * grad;

    Gain[i] = gain;
    PrevGradients[i] = pgrad;
    Positions[i] += pgrad * mult;
  }